apiVersion: v1
kind: Service
metadata:
  name: django-service
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
spec:
  type: ClusterIP
  selector:
    app: django-app
  ports:
    - name: http
      protocol: TCP
      port: 80  # Exposed internal service port
      targetPort: 8000  # Port Django app is listening on
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      initContainers:
        - name: migrate
          image: europe-west4-docker.pkg.dev/scm-group14/scm-container-repository/django-app:latest
          command: ['python', 'manage.py', 'migrate']
      containers:
        - name: django-app
          image: europe-west4-docker.pkg.dev/scm-group14/scm-container-repository/django-app:latest
          ports:
            - containerPort: 8000
              protocol: TCP
          env:
            - name: DATABASE_HOST
              value: postgres-service
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: dbport
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: postgres-config
                  key: dbname
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: username
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: password
            - name: REDIS_HOST
              value: redis-service
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: redis-config
                  key: redisport